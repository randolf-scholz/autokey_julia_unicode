exclude: '(\.git/|\.venv/|\.idea/|third_party/|experimental/)'
minimum_pre_commit_version: 3.6.0
default_language_version:
  python: python3.11
  node: "20.10.0"
repos:
  # https://pre-commit.com/hooks.html
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.5.0
    hooks:
      - id: check-added-large-files
        description: "prevents giant files from being committed."
      - id: check-ast
        description: "simply checks whether the files parse as valid python."
      - id: check-builtin-literals
        description: "requires literal syntax when initializing empty or zero python builtin types."
      - id: check-byte-order-marker
        description: "forbids files which have a utf-8 byte-order marker."
      - id: check-json
        description: "checks json files for parseable syntax."
      - id: check-executables-have-shebangs
        description: "ensures that (non-binary) executables have a shebang."
      - id: check-shebang-scripts-are-executable
        description: "ensures that (non-binary) files with a shebang are executable."
      - id: check-symlinks
        description: "checks for symlinks which do not point to anything."
      - id: check-toml
        description: "checks toml files for parseable syntax."
      - id: check-xml
        description: "checks xml files for parseable syntax."
      - id: check-yaml
        description: "checks yaml files for parseable syntax."
      - id: debug-statements
        description: "checks for debugger imports and py37+ `breakpoint()` calls in python source."
      - id: end-of-file-fixer
        description: "ensures that a file is either empty, or ends with one newline."
      - id: pretty-format-json
        args: ["--autofix"]
        exclude: ^.*.ipynb$
        description: "sets a standard for formatting json files."
      - id: requirements-txt-fixer
        description: "sorts entries in requirements.txt"
      - id: trailing-whitespace
        description: "trims trailing whitespace."
        exclude: ^.*.tsv$
  # nbstripout-fast
  - repo: https://github.com/deshaw/nbstripout-fast.git
    rev: v1.0.3
    hooks:
      - id: nbstripout-fast
  # ruff
  - repo: https://github.com/astral-sh/ruff-pre-commit
    rev: v0.3.0
    hooks:
      - id: ruff
        files: (^src/|^tests/)
      - id: ruff
        name: ruff-isort
        files: (^src/|^tests/)
        args: ["--select", "I", "--fix"]
      - id: ruff-format
        files: (^src/|^tests/)
  # pyright
  - repo: https://github.com/RobertCraigie/pyright-python
    rev: v1.1.352
    hooks:
      - id: pyright
  # markdownlint
  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.39.0
    hooks:
      - id: markdownlint
        args:
          [
            "--disable",
            "MD013", # Line length
            "MD033", # Inline HTML
            "--"  # otherwise files are interpreted as args
          ]
  - repo: local
    hooks:
      - id: shellcheck
        name: shellcheck
        description: "Check shell scripts with shellcheck"
        language: system
        entry: shellcheck
        types: [shell]
        args:
          - "--shell=bash"
          - "--color=always"
          - "--format=gcc"
      - id: chktex
        name: chktex
        description: "Check LaTeX files with chktex"
        language: system
        types: [tex]
        # chktex --format=$'%f:%l:%c %m [%k %n]\n' --quiet --nowarn=1 *files*
        entry: chktex
        args:
          - "--format=%f:%l:%c %m [%k %n]\n"
          - "--quiet"
          - "--erroron=all"
          - "--nowarn=1"
          - "--nowarn=3"
          - "--nowarn=19"
          - "--nowarn=21"
          - "--nowarn=22"
          - "--nowarn=30"
          - "--nowarn=41"
          - "--nowarn=44"
          - "--nowarn=46"
          - "--"
      - id: lacheck
        name: lacheck
        description: "A consistency checker for LaTeX documents"
        language: system
        types: [tex]
        files: \.tex$
        entry: bash -c '! printf "%s\n" "$@" | xargs -I _ lacheck _ | grep .' --
        # NOTE: lacheck only takes a single file at a time, so we need to use xargs
        # NOTE: lacheck always returns 0, so we need to grep for output
        # NOTE: grep has exit code 1 if no matches are found, so we need to invert with `!`
